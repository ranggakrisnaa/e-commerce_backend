// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String
  username     String         @unique
  password     String
  wishlist     Wishlist[]
  cart         Chart[]
  user_rating  User_Rating[]
  user_comment User_Comment[]
  order        Order[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Admin {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String
  username  String      @unique
  password  String
  Warehouse Warehouse[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Product {
  id                Int                 @id @default(autoincrement())
  title             String
  description       String
  price             Int
  SKU               String
  order_product     Order_Product[]
  chart             Chart[]
  wishlist          Wishlist[]
  comment           Comment[]
  rating            Rating[]
  category          Category[]
  product_warehouse Product_Warehouse[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model Warehouse {
  id                Int                 @id @default(autoincrement())
  title             String
  description       String
  address           String
  product_warehouse Product_Warehouse[]
  order             Order[]
  Admin             Admin?              @relation(fields: [adminId], references: [id])
  adminId           Int?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  title     String
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id                Int        @id @default(autoincrement())
  invoice           String
  totalPrice        Int
  statusTransaction String
  User              User?      @relation(fields: [userId], references: [id])
  userId            Int?
  Warehouse         Warehouse? @relation(fields: [warehouseId], references: [id])
  warehouseId       Int?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chart {
  id        Int      @id @default(autoincrement())
  quantity  Int
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rating {
  id          Int           @id @default(autoincrement())
  rate        Int
  user_rating User_Rating[]
  Product     Product?      @relation(fields: [productId], references: [id])
  productId   Int?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Comment {
  id           Int            @id @default(autoincrement())
  content      String
  user_comment User_Comment[]
  Product      Product?       @relation(fields: [productId], references: [id])
  productId    Int?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Product_Warehouse {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Product     Product?   @relation(fields: [productId], references: [id])
  productId   Int?
  Warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])
  warehouseId Int?
}

model Order_Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model User_Rating {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  Rating    Rating?  @relation(fields: [ratingId], references: [id])
  ratingId  Int?
}

model User_Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  Comment   Comment? @relation(fields: [commentId], references: [id])
  commentId Int?
}
